@using IcedMemories.Helpers
@model IEnumerable<IcedMemories.Models.CakeViewModel>

@{
    ViewBag.Title = "Cakes";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
  .modal-body {
    width: 600px !important;
    margin: 30px auto !important;
    background-color:white;
  }
</style>

<script type="text/javascript">

  $(window).load(function () {
    var headerHeight = 0;
    var detailsHeight = 0;
    var imageHeight = 0;
    var counter = 0
    $('.CakeHeader').each(function () {
      if ($(this).height() > headerHeight) {
        headerHeight = $(this).height();
      }
    });
    $('.CakeHeader').each(function () {
      $(this).height(headerHeight);
    });
    $('.CakeDetails').each(function () {
      if ($(this).height() > detailsHeight) {
        detailsHeight = $(this).height();
      }
    });
    $('.CakeDetails').each(function () {
      $(this).height(detailsHeight);
    });

    $('.CakeImageContainer').each(function () {
      imageHeight = imageHeight + $(this).height();
      counter += 1;
    });
    $('.CakeImageContainer').each(function () {
      $(this).height(imageHeight / counter);
    });
    $('.CakeImage').each(function () {
      if ($(this).height() > (imageHeight / counter)) {
        $(this).height(imageHeight / counter);
      }
    });
  });

  $(function () {
    // Initialize numeric spinner input boxes
    //$(".numeric-spinner").spinedit();
    // Initialize modal dialog
    // attach modal-container bootstrap attributes to links with .modal-link class.
    // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
      $('body').on('click', '.modal-link', function (e) {
        if (window.matchMedia("(min-width: 768px)").matches) {
            e.preventDefault();
              $(this).attr("href", "/Admin/CakeDetailsPartial/" + $(this).attr("id"));
              $(this).attr('data-target', '#modal-container');
              $(this).attr('data-toggle', 'modal');
          }
          else {
          $(this).attr("href", "/Admin/CakeDetails/" + $(this).attr("id"));
              $(this).attr('data-target', '');
              $(this).attr('data-toggle', '');
              return true;
          }
      });

    // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
    $('body').on('click', '.modal-close-btn', function () {
      $('#modal-container').modal('hide');
    });
    //clear modal cache, so that new content can be loaded
    $('#modal-container').on('hidden.bs.modal', function () {
      $(this).removeData('bs.modal');
    });
    $('#CancelModal').on('click', function () {
      return false;
    });
  });

</script>



<h2>Cakes</h2>

<p>
    @Html.ActionLink("Add Cake", "CakeDetails", "Admin", new { }, new { @class = "modal-link btn btn-primary" })
</p>

<div class="row">
  @foreach (var item in Model)
  {
    <article class="col-lg-4 col-md-6 col-sm-12 col-xs-12 CakeContainer">
      <header class="CakeHeader">
        <h4>@Html.DisplayFor(modelItem => item.DateAdded) - @Html.DisplayFor(modelItem => item.Title) </h4>
        @Html.ActionLink("View", "CakeDetails", "Admin", new { id = item.Id }, new { @id = item.Id, @class = "modal-link btn btn-success" })
        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "modal-link btn btn-danger" })
      </header>
      <section class="CakeDetails">
        @Html.DisplayFor(modelItem => item.Description)
      </section>
      <section class="CakeImageContainer">
        @Html.Image(item.ImageLink, new{ @alt=item.Title, @class="CakeImage"})
      </section>
    </article>
  }
</div>

<div id="modal-container" class="modal fade"
     tabindex="-1" role="dialog">
  <div class="modal-content">
  </div>
</div>


